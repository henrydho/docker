---
version: '3.9'

secrets:
  redis_password:
    file: /var/lib/docker/volumes/secrets/_data/ghostfolio/redis_password
  postgres_user:
    file: /var/lib/docker/volumes/secrets/_data/ghostfolio/postgres_user
  postgres_password:
    file: /var/lib/docker/volumes/secrets/_data/ghostfolio/postgres_password
  postgres_db:
    file: /var/lib/docker/volumes/secrets/_data/ghostfolio/postgres_db
  access_token_salt:
    file: /var/lib/docker/volumes/secrets/_data/ghostfolio/access_token_salt
  jwt_secret_key:
    file: /var/lib/docker/volumes/secrets/_data/ghostfolio/jwt_secret_key

services:
  ghostfolio:
    image: ghostfolio/ghostfolio:latest
    container_name: 'ghostfolio'
    hostname: 'ghostfolio'
    restart: unless-stopped
    # env_file:
    #   - ../.env
    environment:
      # DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?connect_timeout=300&sslmode=prefer
      NODE_ENV: production
      REDIS_HOST: 'ghostfolio-redis'
      # REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - 3333:3333
    secrets:
      - redis_password
      - postgres_user
      - postgres_password
      - postgres_db
      - access_token_salt
      - jwt_secret_key
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/docker/volumes/secrets/_data/ghostfolio:/etc/init.d
    networks:
      - outside
      - backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: 'ghostfolio-postgres'
    hostname: 'ghostfolio-postgres'
    restart: unless-stopped
    # env_file:
    #   - ../.env
    secrets:
      - postgres_user
      - postgres_db
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/docker/volumes/secrets/_data/ghostfolio:/etc/init.d
    networks:
      - backend

  redis:
    image: redis:alpine
    container_name: 'ghostfolio-redis'
    hostname: 'ghostfolio-redis'
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping | grep PONG']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

volumes:
  postgres:
    driver: local
    driver_opts:
      type: nfs
      o: addr=nfs.htg.io,rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14,nfsvers=4
      device: ":/mnt/disk1/nfs/docker-volumes/ghostfolio/postgress"

networks:
  backend:
  outside:
    external: true
